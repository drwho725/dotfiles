snippet gpc
	${1:variable} = $vbulletin->input->clean_gpc('${2:gprc}', '${3:name}', TYPE_${4:STR});
snippet gpca
	$vbulletin->input->clean_array_gpc('${1:gprc}', array(
		'${2:name}' => TYPE_${3:STR},
	));
snippet gpci
	'${1:name}' => TYPE_${2:TYPE},
snippet outtemp
	print_output(include(get_php_template('${1:template_name}')));
snippet vartemp
	${1:variable} = include(get_php_template('${2:template_name}'));
snippet mget
	${1:variable} = $vbulletin->sd['memcachemanual']->get($cache_key, ${2:"namespace"});
snippet mset
	$vbulletin->sd['memcachemanual']->set($cache_key, ${1:variable}, ${2:timeout}, ${3:"namespace"});
snippet mdec
	$vbulletin->sd['memcachemanual']->decrement($cache_key, 1, ${1:"namespace"});
snippet mdel
	$vbulletin->sd['memcachemanual']->delete($cache_key, ${1:"namespace"});
snippet mflush
	$vbulletin->sd['memcachemanual']->flush($cache_key);
snippet minc
	$vbulletin->sd['memcachemanual']->increment($cache_key, 1, ${1:"namespace"});
snippet mcache
	${1:variable} = $vbulletin->sd['memcachemanual']->get($cache_key, ${2:"namespace"});
	if ($1 === false)
	{
		$vbulletin->sd['memcachemanual']->set($cache_key, $1, ${3:timeout}, $2);
	}
snippet while
	while (${1:/* condition */})
	{
		${2:${VISUAL:// code...}}
	}
snippet arr
	$${1:arrayName} = array(
		'${2}' => ${3},
	);${4}
